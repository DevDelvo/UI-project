{"version":3,"sources":["stages/1_begin_trade.js","ethereum/web3.js","ethereum/contractInstance.js","stages/2_export_clearance.js","components/Home.js","ethereum/factoryInstance.js","components/Factory.js","components/Header.js","components/Layout.js","components/HelloWorld.js","App.js","serviceWorker.js","index.js"],"names":["SendForExportClearance","state","msg","errorMessage","loadingData","seller","bank","pod","cfDocs","cDocs","cfDocsHash","cDocsHash","onSubmit","_callee","event","_media_pyofey_DATA_Coding_Projects_2018_11_06_azure_truffle_frontend_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","preventDefault","_this","setState","loading","props","SupplyChainInstance","methods","ExportClearance","send","from","account","t0","message","stop","this","captureCFDocs","file","reader","window","FileReader","readAsArrayBuffer","onloadend","Object","_media_pyofey_DATA_Coding_Projects_2018_11_06_azure_truffle_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee2","buffer","spark","hash","_context2","Buffer","result","SparkMD5","ArrayBuffer","append","end","toString","err","console","log","captureCDocs","_callee3","_context3","document","title","statusMessage","_this2","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","active","inverted","semantic_ui_react__WEBPACK_IMPORTED_MODULE_9__","size","semantic_ui_react__WEBPACK_IMPORTED_MODULE_10__","floating","positive","header","content","semantic_ui_react__WEBPACK_IMPORTED_MODULE_11__","trigger","semantic_ui_react__WEBPACK_IMPORTED_MODULE_12__","primary","Header","Content","semantic_ui_react__WEBPACK_IMPORTED_MODULE_13__","error","Field","semantic_ui_react__WEBPACK_IMPORTED_MODULE_14__","onChange","target","value","placeholder","type","files","basic","Component","web3","regenerator_default","eth","getAccounts","sent","alert","Web3","currentProvider","get_account","provider","providers","HttpProvider","net","getNetworkType","netId","helloWorldInstance","Contract","PostBox","abi","ExportClearanceAction","approveDocuments","ApproveExportDocumentation","messsage","amendDocuments","AmendExportDocumentation","rejectDocuments","Terminate","react_default","Dimmer","Loader","Message","negative","Modal","Button","floated","color","onClick","Home","contractState","instanceShipper","instanceOriginCustoms","accounts","address","match","params","chainAddress","SupplyChainTransportation","State","call","InstanceShipper","InstanceOriginCustoms","_1_begin_trade","_2_export_clearance","FactoryInstance","SupplychainFactory","Factory","description","freightCarrierAddress","originCustomsAddress","consigneeAddress","deployedChains","_this$state","deployedAddress","createSupplyChain","getDeployedSupplyChain","items","map","chainID","href","fluid","style","overflowWrap","Card","Group","Grid","stackable","Column","width","length","renderChains","Row","icon","labelPosition","Icon","name","Form","Input","Menu","marginTop","Item","Link","to","position","Layout","Container","rel","children","HelloWorld","msgVal","existingMsg","res","postMsg","getMsg","disabled","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ce5a2a4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Loader, Dimmer, Form, Button, Input, Message, Modal} from 'semantic-ui-react';\nimport SparkMD5 from 'spark-md5';\n\nclass SendForExportClearance extends Component {\n  state = {\n    msg:'',\n    errorMessage:'',\n    loadingData:false,\n    seller:'',\n    bank:'',\n    pod:'',\n    cfDocs:'',\n    cDocs:'',\n    cfDocsHash:'',\n    cDocsHash:'',\n  }\n\n  async componentDidMount(){\n    this.setState({loadingData:true});\n    document.title = \"Azure UI\";\n    this.setState({loadingData:false});\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({errorMessage:'', loading:true, msg:''});\n\n    try{\n      await this.props.SupplyChainInstance.methods.ExportClearance(this.state.seller,this.state.pod, this.state.bank, this.state.cfDocsHash, this.state.cDocsHash).send({from:this.props.account});\n      this.setState({msg:'Successfully uploaded!'});\n    }catch(err){\n      this.setState({errorMessage:err.message});\n    }\n\n    this.setState({loading:false});\n  }\n\n  captureCFDocs = (file) => {\n    this.setState({errorMessage:'', loading:true, msg:''});\n\n    if (typeof file !== 'undefined'){\n      try{\n        let reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = async () => {\n          const buffer = Buffer.from(reader.result);\n          var spark = new SparkMD5.ArrayBuffer();\n          spark.append(buffer);\n          let hash = spark.end();\n          this.setState({cfDocsHash:hash.toString()});\n        }\n      }catch(err){\n        console.log(\"error: \",err.message);\n      }\n    }else{\n      this.setState({errorMessage:'No file selected!'});\n    }\n    this.setState({loading:false});\n  }\n\n  captureCDocs = (file) => {\n    this.setState({errorMessage:'', loading:true, msg:''});\n\n    if (typeof file !== 'undefined'){\n      try{\n        let reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = async () => {\n          const buffer = Buffer.from(reader.result);\n          var spark = new SparkMD5.ArrayBuffer();\n          spark.append(buffer);\n          let hash = spark.end();\n          this.setState({cDocsHash:hash.toString()});\n        }\n      }catch(err){\n        console.log(\"error: \",err.message);\n      }\n    }else{\n      this.setState({errorMessage:'No file selected!'});\n    }\n    this.setState({loading:false});\n  }\n\n  render() {\n    if(this.state.loadingData){\n      return (\n        <Dimmer active inverted>\n        <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    let statusMessage;\n    if (this.state.msg === '' && this.state.errorMessage === ''){\n      statusMessage = null;\n    }else{\n      statusMessage = <Message floating positive header=\"Success!\" content={this.state.msg} />;\n    }\n\n    return (\n      <div>\n      <b>Contract State:</b> Begin Trade<br/>\n        <Modal trigger={<Button primary>Export Clearance</Button>}>\n          <Modal.Header>Upload Export Clearance Docs</Modal.Header>\n          <Modal.Content>\n            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n              <Form.Field>\n                <label>Seller</label>\n                <Input onChange={event => this.setState({seller:event.target.value})} placeholder='<string>' />\n              </Form.Field>\n              <Form.Field>\n                <label>Port Of Discharge</label>\n                <Input onChange={event => this.setState({pod:event.target.value})} />\n              </Form.Field>\n              <Form.Field>\n                <label>Origin Bank</label>\n                <Input onChange={event => this.setState({bank:event.target.value})} />\n              </Form.Field>\n              <Form.Field>\n                <label>Customs Filing Docs</label>\n                <Input type='file' onChange={event => {this.setState({cfDocs:event.target.files[0]}); this.captureCFDocs(event.target.files[0])}} />\n                {this.state.cfDocsHash &&\n                  <div>File Hash: {this.state.cfDocsHash}</div>\n                }\n              </Form.Field>\n              <Form.Field>\n                <label>Customs Docs</label>\n                <Input type='file' onChange={event => {this.setState({cDocs:event.target.files[0]}); this.captureCDocs(event.target.files[0])}} />\n                {this.state.cDocsHash &&\n                  <div>File Hash: {this.state.cDocsHash}</div>\n                }\n              </Form.Field>\n              <Button loading={this.state.loading} primary basic type='submit'>Submit</Button>\n              <Message error header=\"Oops!\" content={this.state.errorMessage} />\n              {statusMessage}\n            </Form>\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default SendForExportClearance;","import Web3 from 'web3';\n\nlet web3, defaultAcc;\nfunction networkCheck(){\n  web3.eth.net.getNetworkType((err, netId) => {\n  switch (netId) {\n    case \"main\":\n    alert(\"This is Mainnet. Please switch to Azure PoA Network!\");\n    break\n    case \"ropsten\":\n    alert(\"This is Ropsten test network. Please switch to Azure PoA Network!\");\n    break\n    case \"rinkeby\":\n    alert(\"This is Rinkeby test network! Please switch to Azure PoA Network!\");\n    break\n    case \"kovan\":\n    alert(\"This is Kovan test network. Please switch to Azure PoA Network!\");\n    break\n    default:\n    //alert(\"Nice! It looks like you're connected to Azure PoA Network!\");\n  }\n  })\n}\n\nasync function get_account(){\n  defaultAcc = await web3.eth.getAccounts();\n  if (defaultAcc[0] == null){\n    // User is not logged in\n    alert(\"Please Login To MetaMask And Refresh Page\");\n  }\n}\n\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n  // We are in the browser and metamask is running.\n\n  //const provider = new Web3.providers.HttpProvider(\"http://ethygqbek-dns-reg1.eastus.cloudapp.azure.com:8540\");\n  //web3 = new Web3(provider);\n  web3 = new Web3(window.web3.currentProvider);\n  get_account();\n  \n}else{\n  // User is not running metamask\n\n  alert(\"Please Install MetaMask from metamask.io\");\n  const provider = new Web3.providers.HttpProvider(\"http://ethygqbek-dns-reg1.eastus.cloudapp.azure.com:8540\");\n  web3 = new Web3(provider);\n}\n\nnetworkCheck();\n\nexport default web3;","import web3 from './web3';\nimport PostBox from './build/contracts/PostBox.json';\nimport SupplyChainTransportation from './build/contracts/SupplyChainTransportation.json';\n\n//var address = \"0xdcca47d0396ccdd76fbfe9dc779f619184df9357\";\n//var abi = [{\"constant\": false,\"inputs\": [{\"name\": \"text\",\"type\": \"string\"}],\"name\": \"postMsg\",\"outputs\": [],\"payable\": false,\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"constant\": true,\"inputs\": [],\"name\": \"getMsg\",\"outputs\": [{\"name\": \"\",\"type\": \"string\"}],\"payable\": false,\"stateMutability\": \"view\",\"type\": \"function\"}];\n//const ContractInstance = new web3.eth.Contract(abi, address);\n\nexport const helloWorldInstance = new web3.eth.Contract(PostBox.abi, \"0x7d0a7af75b095b3fb1d6dbda31577e77a59bd2f6\");\n\n//export const SupplyChainInstance = new web3.eth.Contract(SupplyChainTransportation.abi, \"0x5250b6be5568fd58b6244bb79c6a3a0ae9d9b87b\"); // No Factory; state=0; Begin trade\n//export const SupplyChainInstance = new web3.eth.Contract(SupplyChainTransportation.abi, \"0xbc99706eb7bcf79f2af24b784ce501ad4bd91399\"); // No Factory; state=1; Export Clearance\n\nexport const SupplyChainInstance = (address) => {\n\treturn new web3.eth.Contract(SupplyChainTransportation.abi, address); // With Facotry\n}","import React, { Component } from 'react';\nimport {Loader, Dimmer, Button, Message, Modal} from 'semantic-ui-react';\n\nclass ExportClearanceAction extends Component {\n  state = {\n    msg:'',\n    errorMessage:'',\n    loadingData:false,\n  }\n\n  async componentDidMount(){\n    this.setState({loadingData:true});\n    document.title = \"Azure UI\";\n    this.setState({loadingData:false});\n  }\n\n  approveDocuments = async () => {\n    this.setState({msg:'',loading:true, errorMessage:''});\n    try{\n      await this.props.SupplyChainInstance.methods.ApproveExportDocumentation().send({from:this.props.account});\n      this.setState({msg:'Documents Approved!'});\n    }catch(err){\n      this.setState({errorMessage:err.messsage});\n    }\n    this.setState({loading:false});\n  }\n\n  amendDocuments = async () => {\n    this.setState({msg:'',loading:true, errorMessage:''});\n    try{\n      await this.props.SupplyChainInstance.methods.AmendExportDocumentation().send({from:this.props.account});\n      this.setState({msg:'Documents Amed Requested!'});\n    }catch(err){\n      this.setState({errorMessage:err.messsage});\n    }\n    this.setState({loading:false});\n  }\n\n  rejectDocuments = async () => {\n    this.setState({msg:'',loading:true, errorMessage:''});\n    try{\n      await this.props.SupplyChainInstance.methods.Terminate().send({from:this.props.account});\n      this.setState({msg:'Documents Rejected!'});\n    }catch(err){\n      this.setState({errorMessage:err.messsage});\n    }\n    this.setState({loading:false});\n  }\n\n  render() {\n    if(this.state.loadingData){\n      return (\n        <Dimmer active inverted>\n        <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    let statusMessage;\n    if (this.state.msg === '' && this.state.errorMessage === ''){\n      statusMessage = null;\n    }else if (this.state.msg){\n      statusMessage = <Message floating positive header=\"Success!\" content={this.state.msg} />;\n    }else if (this.state.errorMessage){\n      statusMessage = <Message floating negative header=\"Oops!\" content={this.state.errorMessage} />;\n    }\n\n    return (\n      <div>\n        <b>Contract State:</b> Export Clearance<br/>\n        <Modal size={'mini'} trigger={<Button primary>Approve Documentation</Button>}>\n          <Modal.Header>Approve Documents</Modal.Header>\n          <Modal.Content>\n            Approve Documents?\n            <Button floated='right' color='green' loading={this.state.loading} primary basic onClick={this.approveDocuments}>Approve</Button>\n            {statusMessage}\n          </Modal.Content>\n        </Modal>\n\n        <Modal size={'mini'} trigger={<Button primary>Amend Documentation</Button>}>\n          <Modal.Header>Send Document Amend Request</Modal.Header>\n          <Modal.Content>\n            Amend Documents?\n            <Button floated='right' color='yellow' loading={this.state.loading} primary basic onClick={this.amendDocuments}>Amend</Button>\n            {statusMessage}\n          </Modal.Content>\n        </Modal>\n\n        <Modal size={'mini'} trigger={<Button primary>Reject</Button>}>\n          <Modal.Header>Reject Export Clearance</Modal.Header>\n          <Modal.Content>\n            Reject Documents?\n            <Button floated='right' color='red' loading={this.state.loading} primary basic onClick={this.rejectDocuments}>Reject</Button>\n            {statusMessage}\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ExportClearanceAction;","import React, { Component } from 'react';\nimport {Loader, Dimmer} from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport {SupplyChainInstance as supplychain_instance} from '../ethereum/contractInstance';\nimport SendForExportClearance from '../stages/1_begin_trade';\nimport ExportClearanceAction from '../stages/2_export_clearance';\n\nclass Home extends Component {\n    state = {\n    msg:'',\n    loadingData:false,\n    account:'',\n    SupplyChainInstance:'',\n    contractState:'',\n    instanceShipper:'',\n    instanceOriginCustoms:'',\n  }\n\n  async componentDidMount(){\n    this.setState({loadingData:true});\n    document.title = \"Azure UI\";\n\n    const accounts = await web3.eth.getAccounts();\n    const SupplyChainInstance = await supplychain_instance(this.props.match.params.chainAddress);\n    let contractState = await SupplyChainInstance.methods.State().call({from:accounts[0]});\n    let instanceShipper = await SupplyChainInstance.methods.InstanceShipper().call({from:accounts[0]});\n    let instanceOriginCustoms = await SupplyChainInstance.methods.InstanceOriginCustoms().call({from:accounts[0]});\n\n    this.setState({loadingData:false, account:accounts[0], SupplyChainInstance, contractState, instanceShipper, instanceOriginCustoms});\n  }\n\n  render() {\n    if(this.state.loadingData){\n      return (\n        <Dimmer active inverted>\n        <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div>\n        <h1>Supplychain Transportation</h1>\n        {this.state.instanceShipper===this.state.account && this.state.contractState==='0' &&\n          <SendForExportClearance account={this.state.account} SupplyChainInstance={this.state.SupplyChainInstance} />\n        }\n\n        {this.state.instanceOriginCustoms===this.state.account && this.state.contractState==='1' &&\n          <ExportClearanceAction account={this.state.account} SupplyChainInstance={this.state.SupplyChainInstance} />\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default Home;","import web3 from './web3';\nimport SupplychainFactory from './build/contracts/SupplychainFactory.json';\n\n//export const FactoryInstance = new web3.eth.Contract(SupplychainFactory.abi, \"0x8719f6d485bc53acae485ebbdd73e1f739e490d2\");\nexport const FactoryInstance = new web3.eth.Contract(SupplychainFactory.abi, \"0xf0a2631c8895947933424dbe605422c346023c4d\");\n","import React, { Component } from 'react';\nimport {Loader, Dimmer, Form, Input, Message, Button, Card, Modal, Grid, Icon} from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\n//import {SupplyChainInstance} from '../ethereum/contractInstance';\nimport {FactoryInstance} from '../ethereum/factoryInstance';\n\nclass Factory extends Component {\n  state = {\n    msg:'',\n    errorMessage:'',\n    loadingData:false,\n    account:'',\n    description:'',\n    freightCarrierAddress:'',\n    originCustomsAddress:'',\n    consigneeAddress:'',\n    deployedChains:[],\n  }\n\n  async componentDidMount(){\n    this.setState({loadingData:true});\n    document.title = \"Azure UI\";\n\n    const accounts = await web3.eth.getAccounts();\n    let deployedChains = await FactoryInstance.methods.getDeployedSupplyChain().call({from:accounts[0]});\n    console.log(deployedChains);\n    this.setState({loadingData:false, account:accounts[0], deployedChains});\n  }\n\n  renderChains(){\n    const items = this.state.deployedChains.map(chainID => {\n      return {\n        href:'/UI-project/'+chainID,\n        header: \"Address: \" + chainID,\n        description: \"Click for Details\",\n        fluid: true,\n        style: { overflowWrap: 'break-word' },\n      };\n    });\n\n    return <Card.Group items={items} />;\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({errorMessage:'', loading:true, msg:''});\n\n    try{\n      let {description, freightCarrierAddress, originCustomsAddress, consigneeAddress, account} = this.state;\n      let deployedAddress = await FactoryInstance.methods.createSupplyChain(description, freightCarrierAddress, originCustomsAddress, consigneeAddress).send({from:account});\n      console.log(deployedAddress);\n      this.setState({msg:'Contract deployed successfully!'});\n    }catch(err){\n      this.setState({errorMessage:err.message});\n    }\n\n    this.setState({loading:false});\n  }\n\n  render() {\n    if(this.state.loadingData){\n      return (\n        <Dimmer active inverted>\n        <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n        );\n    }\n\n    let statusMessage;\n    if (this.state.msg === ''){\n      statusMessage = null;\n    }else{\n      statusMessage = <Message floating positive header=\"Success!\" content={this.state.msg} />;\n    }\n\n    return (\n      <div>\n      <h1>Deployed Supplychain Transportation Contracts</h1>\n      <Grid stackable>\n      <Grid.Column width={12}>\n      {this.state.deployedChains.length>0 && this.renderChains()}\n      {this.state.deployedChains.length===0 && <p>No contracts deployed!</p>}\n      </Grid.Column>\n      <Grid.Column width={4}>\n      <Grid.Row>\n      <Modal trigger={<Button primary icon labelPosition='right'><Icon name='plus circle' />Create New Contract</Button>}>\n      <Modal.Header>Supplychain Transportation Factory</Modal.Header>\n      <Modal.Content>\n      <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n      <Form.Field>\n      <label>Description</label>\n      <Input onChange={event => this.setState({description:event.target.value})} />\n      </Form.Field>\n      <Form.Field>\n      <label>Freight Carrier Address</label>\n      <Input onChange={event => this.setState({freightCarrierAddress:event.target.value})} />\n      </Form.Field>\n      <Form.Field>\n      <label>Oigin Customs Address</label>\n      <Input onChange={event => this.setState({originCustomsAddress:event.target.value})} />\n      </Form.Field>\n      <Form.Field>\n      <label>Consignee Address</label>\n      <Input onChange={event => this.setState({consigneeAddress:event.target.value})} />\n      </Form.Field>\n      <Button loading={this.state.loading} primary basic type='submit'>Deploy</Button>\n      <Message error header=\"Oops!\" content={this.state.errorMessage} />\n      {statusMessage}\n      </Form>\n      </Modal.Content>\n      </Modal>\n      </Grid.Row>\n      </Grid.Column>\n      </Grid>\n      </div>\n      );\n  }\n}\n\nexport default Factory;","import React from 'react';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport {Link} from 'react-router-dom';\n\nexport default () => {\n  return (\n    <Menu style={{ marginTop:'0px',}} size={'large'}>\n      <Menu.Item><Link to='/UI-project'>Azure UI</Link></Menu.Item>\n      <Menu.Menu position=\"right\">\n        <Menu.Item><Link to='/UI-project/frontend/helloworld'><Icon name='tasks' />Hello World!</Link></Menu.Item>\n      </Menu.Menu>\n    </Menu>\n  );\n};","import React from 'react';\nimport {Container} from 'semantic-ui-react';\nimport Header from './Header';\n\nexport default props => {\n  return (\n    <Container>\n      <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.min.css\"></link>\n      <Header />\n      {props.children}\n    </Container>\n  );\n};","import React, { Component } from 'react';\nimport {Loader, Dimmer, Form, Input, Button, Message} from 'semantic-ui-react';\n//import {Link} from 'react-router-dom';\nimport web3 from '../ethereum/web3';\nimport {helloWorldInstance} from '../ethereum/contractInstance';\n\nclass HelloWorld extends Component {\n    state = {\n    loadingData:false,\n    errorMessage:'',\n    msg:'',\n    msgVal:'',\n    account:'',\n    existingMsg:'',\n  }\n\n  async componentDidMount(){\n    this.setState({loadingData:true});\n    document.title = \"Azure UI | HelloWorld\";\n\n    const accounts = await web3.eth.getAccounts();\n    let res = await helloWorldInstance.methods.getMsg().call({from:accounts[0]});\n    this.setState({loadingData:false, account:accounts[0], existingMsg:res});\n  }\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    this.setState({errorMessage:'', loading:true, msg:''});\n    try{\n      let res = await helloWorldInstance.methods.postMsg(this.state.msgVal).send({from:this.state.account});\n      console.log(res);\n      this.setState({msg:'Message pushed to Azure PoA blockchain!'});\n    }catch(err){\n      console.log(err);\n      this.setState({errorMessage:err.message, msg:''});\n    }\n\n    this.setState({loading:false});\n  }\n\n  render() {\n    if(this.state.loadingData){\n      return (\n        <Dimmer active inverted>\n        <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    let statusMessage;\n\n    if (this.state.msg === ''){\n      statusMessage = null;\n    }else{\n      statusMessage = <Message floating positive header=\"Success!\" content={this.state.msg} />;\n    }\n\n    return (\n      <div>\n        <h1>Hello World Contract!</h1>\n        <h3>Existing message: {this.state.existingMsg}</h3>\n         <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Group>\n            <Form.Field width={12}>\n              <label>Enter Message</label>\n              <Input onChange={event => this.setState({msgVal:event.target.value})} />\n            </Form.Field>\n            <Button size='small' floated='right' primary basic loading={this.state.loading} disabled={this.state.loading}>\n              Push\n            </Button>\n          </Form.Group>\n          <Message error header=\"Oops!\" content={this.state.errorMessage} />\n          {statusMessage}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default HelloWorld;","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Factory from './components/Factory';\nimport Layout from './components/Layout';\nimport HelloWorld from './components/HelloWorld';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/UI-project\" component={Factory} />\n            <Route exact path=\"/UI-project/:chainAddress\" component={Home} />\n            <Route exact path=\"/UI-project/frontend/helloworld\" component={HelloWorld} />\n          </Switch>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}